import { useState, useEffect } from 'react';
import AuthPage from './pages/auth/AuthPage';
import BuilderPage from './pages/builder/BuilderPage';
import { useBuild } from './hooks/useBuild';
import { ApiClient } from './utils/api';
import type { User } from './types';

function App() {
  const { state, actions } = useBuild();
  const [isLoading, setIsLoading] = useState(true);
  const [apiStatus, setApiStatus] = useState<'connected' | 'disconnected' | 'checking'>('checking');
  
  // –õ–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (–±–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω–æ)
  const [currentUser, setCurrentUser] = useState<User | null>(null);
  const [isLoggedIn, setIsLoggedIn] = useState(false);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
  useEffect(() => {
    const checkApiConnection = async () => {
      try {
        await ApiClient.healthCheck();
        setApiStatus('connected');
        console.log('‚úÖ API –ø–æ–¥–∫–ª—é—á–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ');
      } catch (error) {
        setApiStatus('disconnected');
        console.warn('‚ö†Ô∏è API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ, —Ä–∞–±–æ—Ç–∞–µ–º –≤ demo —Ä–µ–∂–∏–º–µ:', error);
      } finally {
        setIsLoading(false);
      }
    };

    checkApiConnection();
  }, []);

  // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å useBuild —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º
  useEffect(() => {
    if (state.isLoggedIn && state.user) {
      setCurrentUser(state.user);
      setIsLoggedIn(true);
    } else if (!state.isLoggedIn) {
      setCurrentUser(null);
      setIsLoggedIn(false);
    }
  }, [state.isLoggedIn, state.user]);

  const handleLogin = (userData: User) => {
    console.log('üéØ App: handleLogin called with:', userData);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ
    setCurrentUser(userData);
    setIsLoggedIn(true);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    localStorage.setItem('pcbuilder_user', JSON.stringify(userData));
    
    console.log('‚úÖ Login state updated locally');
  };

  const handleLogout = async () => {
    console.log('üö™ App: handleLogout called');
    
    // –û—á–∏—â–∞–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ
    setCurrentUser(null);
    setIsLoggedIn(false);
    
    // –í—ã—Ö–æ–¥–∏–º —á–µ—Ä–µ–∑ useBuild (–æ—á–∏—Å—Ç–∏—Ç —Ç–æ–∫–µ–Ω—ã –µ—Å–ª–∏ API –¥–æ—Å—Ç—É–ø–Ω–æ)
    if (actions.logout) {
      await actions.logout();
    }
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –æ—á–∏—â–∞–µ–º localStorage
    localStorage.removeItem('pcbuilder_user');
    localStorage.removeItem('pcbuilder_build');
    
    console.log('‚úÖ Logout completed');
  };

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–æ—á–Ω—ã–π —ç–∫—Ä–∞–Ω
  if (isLoading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-slate-900 via-slate-800 to-slate-900 flex items-center justify-center">
        <div className="text-center">
          <div className="w-16 h-16 border-4 border-blue-500/30 border-t-blue-500 rounded-full animate-spin mx-auto mb-4"></div>
          <h2 className="text-white text-xl font-medium mb-2">PC Builder Pro</h2>
          <p className="text-gray-400">–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...</p>
          
          {apiStatus === 'checking' && (
            <p className="text-gray-500 text-sm mt-2">–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É...</p>
          )}
        </div>
      </div>
    );
  }

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å API –≤ dev —Ä–µ–∂–∏–º–µ
  const ApiStatusIndicator = () => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º dev —Ä–µ–∂–∏–º —á–µ—Ä–µ–∑ import.meta.env (Vite)
    if (import.meta.env.MODE !== 'development') return null;
    
    return (
      <div className={`fixed top-4 right-4 px-3 py-1 rounded-full text-xs font-medium z-50 ${
        apiStatus === 'connected' 
          ? 'bg-green-500/20 text-green-400 border border-green-500/30' 
          : 'bg-red-500/20 text-red-400 border border-red-500/30'
      }`}>
        {apiStatus === 'connected' ? 'üü¢ API Online' : 'üî¥ API Offline'}
        <span className="ml-2 text-xs">
          {isLoggedIn ? 'üë§' : 'üö™'}
        </span>
      </div>
    );
  };

  // Debug info
  console.log('üêõ App render - Local isLoggedIn:', isLoggedIn, 'useBuild isLoggedIn:', state.isLoggedIn, 'user:', currentUser?.email);

  // –†–µ–Ω–¥–µ—Ä–∏–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
  return (
    <>
      <ApiStatusIndicator />
      
      {!isLoggedIn ? (
        <AuthPage onLogin={handleLogin} />
      ) : (
        <BuilderPage user={currentUser} onLogout={handleLogout} />
      )}
    </>
  );
}

export default App;